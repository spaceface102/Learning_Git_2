-- Concepts of Git
- keeps track of code history
- takes snapshots of your files
- you decide when to make a snapshot by making a commit
- can visit any snapshot any time
- can stage files before committing (git add <filename>)

-- Basic Commands
- $ git init        //Initialize local git repo
    a) creates a .git folder
- $ git add         //Add File(s) to Index
- $ git rm          //With a filename arg, removes file from staging area
    a) git rm -f to force removal
- $ git status      //Check status of working tree
- $ git commit      //Commit changes in index (make a snapshot)
- $ git push        //Push to remote repo such as github
- $ git pull        //Pull the latest changes from a remote repo
- $ git clone       //Copy a whole new repo into current folder
- $ git branch      //Make a new branch (instead of master)
    a) git branch <branch_name>
- $ git checkout    //Change to another branch
    a) git checkout <already_declared_branch_name>
    b) what is useful about being in another branch is that
        any commits done in this branch only affect that specific
        branch. Say I make a test branch, and I do a bunch of 
        modifications to my code. If I commit, the changes will
        only be visible on my branch. It won't be visible on the
        master branch for example. This way, I can figure out the
        problem, keep backups of the versions I make, and all without
        modifying the main master branch.
- $ git merge       //Merge current branch with another branch
    a) if you are in the master brach and want to merge with Say
        the "test" branch, all you have to do is 
        $ git merge test
            i) this might open an editor asking you explain
                why you are merging the branches